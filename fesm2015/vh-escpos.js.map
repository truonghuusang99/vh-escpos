{"version":3,"file":"vh-escpos.js","sources":["../../../projects/vh-escpos/src/lib/encode/PrintBuffer.ts","../../../projects/vh-escpos/src/lib/encode/commands.ts","../../../projects/vh-escpos/src/lib/encode/styles.ts","../../../projects/vh-escpos/src/lib/encode/EscBuilder.ts","../../../projects/vh-escpos/src/lib/vh-escpos.service.ts","../../../projects/vh-escpos/src/public-api.ts","../../../projects/vh-escpos/src/vh-escpos.ts"],"sourcesContent":["// Hat-tip to HÃ¥vard Lian @ https://github.com/haavardlian/escpos\nexport class PrintBuffer {\n    private buffer: Uint8Array;\n    private size: number;\n\n    constructor(size: number = 1024) {\n        this.buffer = new Uint8Array(size);\n        this.size = 0;\n    }\n\n    clear(): void {\n        this.size = 0;\n    }\n\n    flush(): Uint8Array {\n        const buffer = new Uint8Array(this.buffer.slice(0, this.size));\n        this.size = 0;\n        return buffer;\n    }\n\n    write(data: ArrayLike<number>): PrintBuffer {\n        this.resize(data.length);\n        this.buffer.set(data, this.size);\n        this.size += data.length;\n        return this;\n    }\n\n\n    writeUInt8(value: number): PrintBuffer {\n        this.resize(1);\n        this.buffer[this.size++] = value & 0xFF;\n        return this;\n    }\n\n    private resize(need: number): void {\n        const remaining = this.buffer.length - this.size;\n        if (remaining < need) {\n            const oldBuffer = this.buffer;\n            const factor = Math.ceil((need - remaining) / oldBuffer.length) + 1;\n            this.buffer = new Uint8Array(oldBuffer.length * factor);\n            this.buffer.set(oldBuffer, 0);\n        }\n    }\n}","/**\n * Utility function that converts numbers into hex values\n *\n * @usage:\n *   numToHex(256) => '0100'\n *   numToHex(0) => '00'\n */\nlet numToHexString = function(value: any) {\n  value = +value;\n  if (!isNaN(value)) {\n    value = value.toString(16);\n    while (value.length % 2 !== 0) {\n      value = '0' + value;\n    }\n  }\n  return value;\n};\n\n/**\n * ESC/POS _ (Constants)\n */\nlet _: any = {\n  LF: '\\x0a',\n  FS: '\\x1c',\n  FF: '\\x0c',\n  GS: '\\x1d',\n  DLE: '\\x10',\n  EOT: '\\x04',\n  NUL: '\\x00',\n  ESC: '\\x1b',\n  TAB: '\\x74',\n  EOL: '\\n'\n};\n\n/**\n * [FEED_CONTROL_SEQUENCES Feed control sequences]\n * @type {Object}\n */\n_.FEED_CONTROL_SEQUENCES = {\n  CTL_LF: '\\x0a', // Print and line feed\n  CTL_GLF: '\\x4a\\x00', // Print and feed paper (without spaces between lines)\n  CTL_FF: '\\x0c', // Form feed\n  CTL_CR: '\\x0d', // Carriage return\n  CTL_HT: '\\x09', // Horizontal tab\n  CTL_VT: '\\x0b' // Vertical tab\n};\n\n_.CHARACTER_SPACING = {\n  CS_DEFAULT: '\\x1b\\x20\\x00',\n  CS_SET: '\\x1b\\x20'\n};\n\n_.LINE_SPACING = {\n  LS_DEFAULT: '\\x1b\\x32',\n  LS_SET: '\\x1b\\x33'\n};\n\n/**\n * [HARDWARE Printer hardware]\n * @type {Object}\n */\n_.HARDWARE = {\n  HW_INIT: '\\x1b\\x40', // Clear data in buffer and reset modes\n  HW_SELECT: '\\x1b\\x3d\\x01', // Printer select\n  HW_RESET: '\\x1b\\x3f\\x0a\\x00' // Reset printer hardware\n};\n\n/**\n * [CASH_DRAWER Cash Drawer]\n * @type {Object}\n */\n_.CASH_DRAWER = {\n  CD_KICK_2: '\\x1b\\x70\\x00\\x19\\xfa', // Sends a pulse to pin 2 []\n  CD_KICK_5: '\\x1b\\x70\\x01\\x19\\xfa' // Sends a pulse to pin 5 []\n};\n\n/**\n * [MARGINS Margins sizes]\n * @type {Object}\n */\n_.MARGINS = {\n  BOTTOM: '\\x1b\\x4f', // Fix bottom size\n  LEFT: '\\x1b\\x6c', // Fix left size\n  RIGHT: '\\x1b\\x51' // Fix right size\n};\n\n/**\n * [PAPER Paper]\n * @type {Object}\n */\n_.PAPER = {\n  PAPER_FULL_CUT: '\\x1d\\x56\\x00', // Full cut paper\n  PAPER_PART_CUT: '\\x1d\\x56\\x01', // Partial cut paper\n  PAPER_CUT_A: '\\x1d\\x56\\x41', // Partial cut paper\n  PAPER_CUT_B: '\\x1d\\x56\\x42' // Partial cut paper\n};\n\n/**\n * [TEXT_FORMAT Text format]\n * @type {Object}\n */\n_.TEXT_FORMAT = {\n  TXT_NORMAL: '\\x1b\\x21\\x00', // Normal text\n  TXT_2HEIGHT: '\\x1b\\x21\\x10', // Double height text\n  TXT_2WIDTH: '\\x1b\\x21\\x20', // Double width text\n  TXT_4SQUARE: '\\x1b\\x21\\x30', // Double width & height text\n\n  TXT_CUSTOM_SIZE: function(width: any, height: any) {\n    // other sizes\n    let widthDec = (width - 1) * 16;\n    let heightDec = height - 1;\n    let sizeDec = widthDec + heightDec;\n    return '\\x1d\\x21' + String.fromCharCode(sizeDec);\n  },\n\n  TXT_HEIGHT: {\n    1: '\\x00',\n    2: '\\x01',\n    3: '\\x02',\n    4: '\\x03',\n    5: '\\x04',\n    6: '\\x05',\n    7: '\\x06',\n    8: '\\x07'\n  },\n  TXT_WIDTH: {\n    1: '\\x00',\n    2: '\\x10',\n    3: '\\x20',\n    4: '\\x30',\n    5: '\\x40',\n    6: '\\x50',\n    7: '\\x60',\n    8: '\\x70'\n  },\n\n  TXT_UNDERL_OFF: '\\x1b\\x2d\\x00', // Underline font OFF\n  TXT_UNDERL_ON: '\\x1b\\x2d\\x01', // Underline font 1-dot ON\n  TXT_UNDERL2_ON: '\\x1b\\x2d\\x02', // Underline font 2-dot ON\n  TXT_BOLD_OFF: '\\x1b\\x45\\x00', // Bold font OFF\n  TXT_BOLD_ON: '\\x1b\\x45\\x01', // Bold font ON\n  TXT_ITALIC_OFF: '\\x1b\\x35', // Italic font ON\n  TXT_ITALIC_ON: '\\x1b\\x34', // Italic font ON\n\n  TXT_FONT_A: '\\x1b\\x4d\\x00', // Font type A\n  TXT_FONT_B: '\\x1b\\x4d\\x01', // Font type B\n  TXT_FONT_C: '\\x1b\\x4d\\x02', // Font type C\n\n  TXT_ALIGN_LT: '\\x1b\\x61\\x00', // Left justification\n  TXT_ALIGN_CT: '\\x1b\\x61\\x01', // Centering\n  TXT_ALIGN_RT: '\\x1b\\x61\\x02' // Right justification\n};\n\n/**\n * Qsprinter-compatible\n * Added by Attawit Kittikrairit\n * [MODEL Model-specific commands]\n * @type {Object}\n */\n_.MODEL = {\n  QSPRINTER: {\n    BARCODE_MODE: {\n      ON: '\\x1d\\x45\\x43\\x01', // Barcode mode on\n      OFF: '\\x1d\\x45\\x43\\x00' // Barcode mode off\n    },\n    BARCODE_HEIGHT_DEFAULT: '\\x1d\\x68\\xA2', // Barcode height default:162\n    CODE2D_FORMAT: {\n      PIXEL_SIZE: {\n        CMD: '\\x1b\\x23\\x23\\x51\\x50\\x49\\x58',\n        MIN: 1,\n        MAX: 24,\n        DEFAULT: 12\n      },\n      VERSION: {\n        CMD: '\\x1d\\x28\\x6b\\x03\\x00\\x31\\x43',\n        MIN: 1,\n        MAX: 16,\n        DEFAULT: 3\n      },\n      LEVEL: {\n        CMD: '\\x1d\\x28\\x6b\\x03\\x00\\x31\\x45',\n        OPTIONS: {\n          L: 48,\n          M: 49,\n          Q: 50,\n          H: 51\n        }\n      },\n      LEN_OFFSET: 3,\n      SAVEBUF: {\n        // Format: CMD_P1{LEN_2BYTE}CMD_P2{DATA}\n        // DATA Max Length: 256*256 - 3 (65533)\n        CMD_P1: '\\x1d\\x28\\x6b',\n        CMD_P2: '\\x31\\x50\\x30'\n      },\n      PRINTBUF: {\n        // Format: CMD_P1{LEN_2BYTE}CMD_P2\n        CMD_P1: '\\x1d\\x28\\x6b',\n        CMD_P2: '\\x31\\x51\\x30'\n      }\n    }\n  }\n};\n/**\n * [CODE2D_FORMAT description]\n * @type {Object}\n */\n_.CODE2D_FORMAT = {\n  TYPE_PDF417: _.GS + 'Z' + '\\x00',\n  TYPE_DATAMATRIX: _.GS + 'Z' + '\\x01',\n  TYPE_QR: _.GS + 'Z' + '\\x02',\n  CODE2D: _.ESC + 'Z',\n  QR_LEVEL_L: 'L', // correct level 7%\n  QR_LEVEL_M: 'M', // correct level 15%\n  QR_LEVEL_Q: 'Q', // correct level 25%\n  QR_LEVEL_H: 'H' // correct level 30%\n};\n\n/**\n * [IMAGE_FORMAT Image format]\n * @type {Object}\n */\n_.IMAGE_FORMAT = {\n  S_RASTER_N: '\\x1d\\x76\\x30\\x00', // Set raster image normal size\n  S_RASTER_2W: '\\x1d\\x76\\x30\\x01', // Set raster image double width\n  S_RASTER_2H: '\\x1d\\x76\\x30\\x02', // Set raster image double height\n  S_RASTER_Q: '\\x1d\\x76\\x30\\x03' // Set raster image quadruple\n};\n\n/**\n * [BITMAP_FORMAT description]\n * @type {Object}\n */\n_.BITMAP_FORMAT = {\n  BITMAP_S8: '\\x1b\\x2a\\x00',\n  BITMAP_D8: '\\x1b\\x2a\\x01',\n  BITMAP_S24: '\\x1b\\x2a\\x20',\n  BITMAP_D24: '\\x1b\\x2a\\x21'\n};\n\n/**\n * [GSV0_FORMAT description]\n * @type {Object}\n */\n_.GSV0_FORMAT = {\n  GSV0_NORMAL: '\\x1d\\x76\\x30\\x00',\n  GSV0_DW: '\\x1d\\x76\\x30\\x01',\n  GSV0_DH: '\\x1d\\x76\\x30\\x02',\n  GSV0_DWDH: '\\x1d\\x76\\x30\\x03'\n};\n\n/**\n * [BEEP description]\n * @type {string}\n */\n(_.BEEP = '\\x1b\\x42'), // Printer Buzzer pre hex\n  /**\n   * [COLOR description]\n   * @type {Object}\n   */\n  (_.COLOR = {\n    0: '\\x1b\\x72\\x00', // black\n    1: '\\x1b\\x72\\x01', // red\n    REVERSE: '\\x1dB1', // Reverses the colors - white text on black background\n    UNREVERSE: '\\x1dB0' // Default: undo the reverse - black text on white background\n  });\n\n/**\n * [SCREEN description]\n * @type {Object}\n */\n_.SCREEN = {\n  BS: '\\x08', // Moves the cursor one character position to the left\n  HT: '\\x09', // Moves the cursor one character position to the right\n  LF: '\\x0a', // Moves the cursor down one line\n  US_LF: '\\x1f\\x0a', // Moves the cursor up one line\n  HOM: '\\x0b', // Moves the cursor to the left-most position on the upper line (home position)\n  CR: '\\x0d', // Moves the cursor to the left-most position on the current line\n  US_CR: '\\x1f\\x0d', // Moves the cursor to the right-most position on the current line\n  US_B: '\\x1f\\x42', // Moves the cursor to the bottom position\n  US_$: '\\x1f\\x24', // Moves the cursor to the nth position on the mth line\n  CLR: '\\x0c', // Clears all displayed characters\n  CAN: '\\x18', // Clears the line containing the cursor\n  US_MD1: '\\x1f\\x01', // Selects overwrite mode as the screen display mode\n  US_MD2: '\\x1f\\x02', // Selects vertical scroll mode as the screen display mode\n  US_MD3: '\\x1f\\x03', // Selects horizontal scroll mode as the display screen mode\n  US_C: '\\x1f\\x43', // Turn cursor display mode on/off\n  US_E: '\\x1f\\x45', // Sets or cancels the blink interval of the display screen\n  US_T: '\\x1f\\x54', // Sets the counter time and displays it in the bottom right of the screen\n  US_U: '\\x1f\\x55', // Displays the time counter at the right side of the bottom line\n  US_X: '\\x1f\\x58', // Sets the brightness of the fluorescent character display tube\n  US_r: '\\x1f\\x72', // Selects or cancels reverse display of the characters received after this command\n  US_v: '\\x1f\\x76' // Sets the DTR signal in the host interface to the MARK or SPACE state\n};\n\n/**\n * [exports description]\n * @type {[type]}\n */\nexport default _;\n","import _ from './commands';\nexport const styles = (type: any) => {\n\tlet styled: string = '';\n\tswitch (type.toUpperCase()) {\n\t\tcase 'B':\n\t\t\tstyled += _.TEXT_FORMAT.TXT_BOLD_ON;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_ITALIC_OFF;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_UNDERL_OFF;\n\t\t\tbreak;\n\t\tcase 'I':\n\t\t\tstyled += _.TEXT_FORMAT.TXT_BOLD_OFF;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_ITALIC_ON;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_UNDERL_OFF;\n\t\t\tbreak;\n\t\tcase 'U':\n\t\t\tstyled += _.TEXT_FORMAT.TXT_BOLD_OFF;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_ITALIC_OFF;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_UNDERL_ON;\n\t\t\tbreak;\n\t\tcase 'U2':\n\t\t\tstyled += _.TEXT_FORMAT.TXT_BOLD_OFF;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_ITALIC_OFF;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_UNDERL2_ON;\n\t\t\tbreak;\n\n\t\tcase 'BI':\n\t\t\tstyled += _.TEXT_FORMAT.TXT_BOLD_ON;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_ITALIC_ON;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_UNDERL_OFF;\n\t\t\tbreak;\n\t\tcase 'BIU':\n\t\t\tstyled += _.TEXT_FORMAT.TXT_BOLD_ON;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_ITALIC_ON;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_UNDERL_ON;\n\t\t\tbreak;\n\t\tcase 'BIU2':\n\t\t\tstyled += _.TEXT_FORMAT.TXT_BOLD_ON;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_ITALIC_ON;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_UNDERL2_ON;\n\t\t\tbreak;\n\t\tcase 'BU':\n\t\t\tstyled += _.TEXT_FORMAT.TXT_BOLD_ON;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_ITALIC_OFF;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_UNDERL_ON;\n\t\t\tbreak;\n\t\tcase 'BU2':\n\t\t\tstyled += _.TEXT_FORMAT.TXT_BOLD_ON;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_ITALIC_OFF;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_UNDERL2_ON;\n\t\t\tbreak;\n\t\tcase 'IU':\n\t\t\tstyled += _.TEXT_FORMAT.TXT_BOLD_OFF;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_ITALIC_ON;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_UNDERL_ON;\n\t\t\tbreak;\n\t\tcase 'IU2':\n\t\t\tstyled += _.TEXT_FORMAT.TXT_BOLD_OFF;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_ITALIC_ON;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_UNDERL2_ON;\n\t\t\tbreak;\n\n\t\tcase 'NORMAL':\n\t\tdefault:\n\t\t\tstyled += _.TEXT_FORMAT.TXT_BOLD_OFF;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_ITALIC_OFF;\n\t\t\tstyled += _.TEXT_FORMAT.TXT_UNDERL_OFF;\n\t\t\tbreak;\n\t}\n\treturn styled;\n};\n","// import { PrintBuilder } from './PrintBuilder';\nimport { PrintBuffer } from './PrintBuffer';\nimport _ from './commands';\nimport { styles } from './styles';\ndeclare var TextEncoder: any;\nconst ESC = 0x1b;\nconst GS = 0x1d;\n\nexport class EscBuilder {\n    private encoder = new TextEncoder();\n    private buffer: PrintBuffer;\n    private size: number;\n    constructor() {\n        this.size = 48;\n    }\n\n    init(): EscBuilder {\n        this.buffer = new PrintBuffer();\n        this.write(ESC);\n        this.write('@');\n        return this;\n    }\n\n    flush(): Uint8Array {\n        return this.buffer.flush();\n    }\n\n    feed(lineCount: number = 1): EscBuilder {\n        this.write(ESC);\n        this.write('d');\n        this.write(lineCount);\n        return this;\n    }\n\n    cut(cutType: string = 'full'): EscBuilder {\n        this.write(GS);\n        this.write('V');\n        this.write(cutType === 'full' ? 1 : 0);\n\n        return this;\n    }\n\n    writeLine(value: string): EscBuilder {\n        return this.write(`${value}\\n`);\n    }\n\n    drawLine(): EscBuilder {\n        let lineText = '';\n        for (let i = 0; i < this.size; i++) {\n            lineText += '-';\n        }\n        return this.write(`${lineText}\\n`);\n    }\n\n    setPageSize(size: number): EscBuilder {\n        this.size = size;\n        return this;\n    }\n\n    writeTable(data: any): EscBuilder {\n        let cellWidth = this.size / data.length;\n        let lineTxt = '';\n\n        for (let i = 0; i < data.length; i++) {\n            lineTxt += data[i].toString();\n\n            let spaces = cellWidth - data[i].toString().length;\n            for (let j = 0; j < spaces; j++) {\n                lineTxt += ' ';\n            }\n        }\n        return this.write(`${lineTxt}\\n`);\n    }\n\n    writeCustomTable(data: any, options: any): EscBuilder {\n        options = options || { size: [] };\n        options.size = options.size || [];\n        let [width = 1, height = 1] = options.size || [];\n        let baseWidth = Math.floor(this.size / width);\n        let cellWidth = Math.floor(baseWidth / data.length);\n        let leftoverSpace = baseWidth - cellWidth * data.length;\n        let lineStr = '';\n        let secondLineEnabled = false;\n        let secondLine = [];\n\n        for (let i = 0; i < data.length; i++) {\n            let obj = data[i];\n            let align = (obj.align || '').toUpperCase();\n            let tooLong = false;\n\n            obj.text = obj.text.toString();\n            let textLength = obj.text.length;\n\n            if (obj.width) {\n                cellWidth = baseWidth * obj.width;\n            } else if (obj.cols) {\n                cellWidth = obj.cols;\n            }\n\n            if (cellWidth < textLength) {\n                tooLong = true;\n                obj.originalText = obj.text;\n                obj.text = obj.text.substring(0, cellWidth);\n            }\n\n            if (align === 'CENTER') {\n                let spaces = (cellWidth - textLength) / 2;\n                for (let s = 0; s < spaces; s++) {\n                    lineStr += ' ';\n                }\n\n                if (obj.text !== '') {\n                    if (obj.style) {\n                        lineStr +=\n                            styles(obj.style) + obj.text + styles('NORMAL');\n                    } else {\n                        lineStr += obj.text;\n                    }\n                }\n\n                for (let s = 0; s < spaces - 1; s++) {\n                    lineStr += ' ';\n                }\n            } else if (align === 'RIGHT') {\n                let spaces = cellWidth - textLength;\n                if (leftoverSpace > 0) {\n                    spaces += leftoverSpace;\n                    leftoverSpace = 0;\n                }\n\n                for (let s = 0; s < spaces; s++) {\n                    lineStr += ' ';\n                }\n\n                if (obj.text !== '') {\n                    if (obj.style) {\n                        lineStr +=\n                            styles(obj.style) + obj.text + styles('NORMAL');\n                    } else {\n                        lineStr += obj.text;\n                    }\n                }\n            } else {\n                if (obj.text !== '') {\n                    if (obj.style) {\n                        lineStr +=\n                            styles(obj.style) + obj.text + styles('NORMAL');\n                    } else {\n                        lineStr += obj.text;\n                    }\n                }\n\n                let spaces = Math.floor(cellWidth - textLength);\n                if (leftoverSpace > 0) {\n                    spaces += leftoverSpace;\n                    leftoverSpace = 0;\n                }\n\n                for (let s = 0; s < spaces; s++) {\n                    lineStr += ' ';\n                }\n            }\n\n            if (tooLong) {\n                secondLineEnabled = true;\n                obj.text = obj.originalText.substring(cellWidth);\n                secondLine.push(obj);\n            } else {\n                obj.text = '';\n                secondLine.push(obj);\n            }\n        }\n\n        // Set size to line\n        if (width > 1) {\n            lineStr =\n                _.TEXT_FORMAT.TXT_CUSTOM_SIZE(width, height) +\n                lineStr +\n                _.TEXT_FORMAT.TXT_NORMAL;\n        }\n\n        // Write the line\n        this.write(`${lineStr}\\n`);\n        if (secondLineEnabled) {\n            // Writes second line if has\n            return this.writeCustomTable(secondLine, options);\n        } else {\n            if (options.feed) {\n                this.feed(options.feed);\n            }\n            if (options.drawLine) {\n                this.drawLine();\n            }\n            return this;\n        }\n    }\n\n    setInverse(inverse: boolean = true): EscBuilder {\n        this.write(GS);\n        this.write('B');\n        this.write(inverse ? 1 : 0);\n\n        return this;\n    }\n\n    setUnderline(value: boolean = true): EscBuilder {\n        this.write(ESC);\n        this.write('-');\n        this.write(value ? 1 : 0);\n        return this;\n    }\n\n    setJustification(value: string = 'left'): EscBuilder {\n        let alignment;\n        switch (value) {\n            case 'center':\n                alignment = 1;\n                break;\n            case 'right':\n                alignment = 2;\n                break;\n            default:\n                alignment = 0;\n                break;\n        }\n        this.write(ESC);\n        this.write('a');\n        this.write(alignment);\n\n        return this;\n    }\n\n    setBold(bold: boolean = true): EscBuilder {\n        this.write(ESC);\n        this.write('E');\n        this.write(bold ? 1 : 0);\n\n        return this;\n    }\n\n    /**\n    @param mode 0, 0x30\n    */\n    setSize(size: string = 'normal'): EscBuilder {\n        this.write(ESC);\n        this.write('!');\n        this.write(size === 'normal' ? 0 : 0x30);\n\n        return this;\n    }\n\n    private write(value: string | Uint8Array | number): any {\n        if (typeof value === 'number') {\n            this.buffer.writeUInt8(value);\n        } else if (typeof value === 'string') {\n            this.buffer.write(this.encoder.encode(value));\n        } else {\n            this.buffer.write(value);\n        }\n        return this;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { EscBuilder } from './encode/EscBuilder';\n@Injectable({\n  providedIn: 'root'\n})\nexport class VhEscposService {\n\n  constructor() { }\n  public builder: EscBuilder;\n\n  /**\n   * Initialize a new print queue\n   */\n  init(): VhEscposService {\n    this.builder = new EscBuilder();\n    this.builder.init();\n    return this;\n  }\n\n  /**\n   *\n   * @param cutType full|partial\n   */\n  public cut(cutType: string = 'full'): VhEscposService {\n    this.builder.cut(cutType);\n    return this;\n  }\n\n  /**\n   *\n   * @param lineCount How many lines to feed\n   */\n  public feed(lineCount: number = 1): VhEscposService {\n    this.builder.feed(lineCount);\n    return this;\n  }\n\n  setInverse(value: boolean = true): VhEscposService {\n    this.builder.setInverse(value);\n    return this;\n  }\n\n  setBold(value: boolean = true): VhEscposService {\n    this.builder.setBold(value);\n    return this;\n  }\n\n  setUnderline(value: boolean = true): VhEscposService {\n    this.builder.setUnderline(value);\n    return this;\n  }\n\n  /**\n   *\n   * @param value left|center\\right\n   */\n  setJustification(value: string = 'left'): VhEscposService {\n    this.builder.setJustification(value);\n    return this;\n  }\n\n  /**\n   *\n   * @param value normal|large\n   */\n  setSize(value: string = 'normal'): VhEscposService {\n    this.builder.setSize(value);\n    return this;\n  }\n\n  /**\n   *\n   * @param text\n   */\n  writeLine(text: string = ''): VhEscposService {\n    this.builder.writeLine(text);\n    return this;\n  }\n\n  /**\n   *\n   *\n   */\n  drawLine(): VhEscposService {\n    this.builder.drawLine();\n    return this;\n  }\n  /**\n   *\n   * @param data\n   */\n  writeTable(data: any): VhEscposService {\n    this.builder.writeTable(data);\n    return this;\n  }\n  /**\n   *\n   * @param size\n   */\n  setPageSize(size: number = 48): VhEscposService {\n    this.builder.setPageSize(size);\n    return this;\n  }\n\n  writeCustomTable(data: any, options: any = {}): VhEscposService {\n    this.builder.writeCustomTable(data, options);\n    return this;\n  }\n\n  /**\n   * write the current builder value to the driver and clear out the builder\n   */\n  flush() {\n    return this.builder.flush();\n  }\n}\n","/*\n * Public API Surface of vh-escpos\n */\n\nexport * from './lib/vh-escpos.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}